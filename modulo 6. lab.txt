
PRACTICA 1



sudo yum install gnupg -y
gpg --full-generate-key


gpg --list-keys

echo "Este es un archivo secreto" > secreto.txt
gpg --encrypt --recipient "tu@email.com" secreto.txt
Esto crea secreto.txt.gpg, que solo puede ser descifrado por la clave privada.

gpg --decrypt secreto.txt.gpg > secreto_descifrado.txt


-------------------------------------------------------------
PRACTICA 2

sudo iptables -A INPUT -p tcp --dport 80 -j REJECT

sudo iptables -L -n -v

sudo iptables -D INPUT -p tcp --dport 22 -j REJECT

Firewall-cmd —list-All
Firewall-cmd —get-active-zones
Firewall-cmd —zone=public —add-port=80/tcp
Firewall-cmd —zone=public —add-port=22/tcp
Firewall-cmd —zone=public —remove-port=80/tcp
Firewall-cmd —zone=public —remove-port=22/tcp






--------------------------------------------------------
PRACTICA 3:
sudo dnf install epel-release -y
sudo dnf install suricata -y
suricata --build-info
sudo nano /etc/suricata/suricata.yaml
sudo nano /etc/suricata/rules/local.rules
alert icmp any any -> any any (msg:"ICMP Echo Request Detected (Ping)"; sid:1000001; rev:1;)
alert tcp any any -> any 21 (msg:"Tráfico hacia puerto 21 (FTP) detectado"; sid:1000002; rev:1;)
alert tcp any any -> any 22 (msg:"Tráfico hacia puerto 22 (SSH) detectado"; sid:1000003; rev:1;)
alert tcp any any -> any 80 (msg:"Tráfico hacia puerto 80 (HTTP) detectado"; sid:1000004; rev:1;)
sudo suricata -c /etc/suricata/suricata.yaml -i <interfaz_red>
sudo tail -f /var/log/suricata/fast.log
--------------------------------------------------------------------
PRACTICA 4:

sudo yum install google-authenticator -y
sudo yum install qrencode

google-authenticator


sudo nano /etc/pam.d/sshd

auth required pam_google_authenticator.so




sudo nano /etc/ssh/sshd_config

ChallengeResponseAuthentication yes
AuthenticationMethods publickey,password publickey,keyboard-interactive
UsePAM yes




sudo systemctl restart sshd



ssh joancuevas@


Contraseña del usuario
Código de Google Authenticator

-----------------------------------------------------------------------------------------------------------#############################################
### Snort en redhat


sudo dnf update && sudo yum update
sudo dnf install https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm -y
sudo subscription-manager repos --enable codeready-builder-for-rhel-8-x86_64-rpms
sudo yum upgrade -y
sudo nano /etc/ld.so.conf.d/local.conf  
      /usr/local/lib 
      /usr/local/lib64 

sudo dnf install flex bison gcc gcc-c++ make cmake autoconf libtool git nano unzip wget libpcap-devel pcre-devel libdnet-devel hwloc-devel openssl-devel zlib-devel luajit-devel pkgconfig pkgconf libunwind-devel libnfnetlink-devel libnetfilter_queue-devel libmnl-devel xz-devel gperftools libuuid-devel hyperscan hyperscan-devel  -y

###instalar libdaq
git clone https://github.com/snort3/libdaq.git 
cd libdaq/ 
./bootstrap 
./configure && make && sudo make install 
sudo ldconfig 
cd ../ 


#
cd /usr/local/src
sudo mkdir -p pcre2
cd pcre2
sudo wget https://github.com/PCRE2Project/pcre2/releases/download/pcre2-10.42/pcre2-10.42.tar.gz
sudo tar -xvzf pcre2-10.42.tar.gz
cd pcre2-10.42
sudo ./configure --prefix=/usr/local
sudo make -j$(nproc)
sudo make install
sudo ldconfig


## instalar snort
git clone https://github.com/snort3/snort3.git 
cd snort3 
export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH 
export PKG_CONFIG_PATH=/usr/local/lib64/pkgconfig:$PKG_CONFIG_PATH 
export CFLAGS="-O3" 
export CXXFLAGS="-O3 -fno-rtti" 
./configure_cmake.sh --prefix=/usr/local/snort --enable-tcmalloc 

cd build/ 
make -j$(nproc) 
sudo make -j$(nproc) install 
cd ../../ 
sudo ldconfig 
/usr/local/snort/bin/snort
sudo ln -s /usr/local/snort/bin/snort /usr/bin/snort
snort -V

## Configurar snort

sudo nano /usr/local/snort/etc/snort/snort.lua
       HOME_NET = '10.0.0.76/24'

sudo nano /usr/local/snort/etc/snort/local.lua

ips = dofile("/usr/local/snort/etc/snort/local.lua")

{
    rules = [[
	include /usr/local/snort/etc/snort/local.rules
    ]]
}

snort -T -c /usr/local/snort/etc/snort/snort.lua

sudo ip link set dev ens160 promisc on

sudo nano /usr/local/snort/etc/snort/local.rules
alert icmp any any -> any any (msg:"ICMP Traffic Detected"; sid:10000001; metadata:policy security-ips alert;)
alert tcp any any -> any 21 (msg:"FTP Traffic Detected"; sid:10000002; rev:1;)
alert tcp any any -> any 22 (msg:"SSH Traffic Detected"; sid:10000003; rev:1;)
alert tcp any any -> any 80 (msg:"HTTP Traffic Detected"; sid:10000004; rev:1;)
alert tcp any any -> any 443 (msg:"HTTPS Traffic Detected"; sid:10000005; rev:1;)
alert udp any any -> any 53 (msg:"DNS Query Detected"; sid:10000006; rev:1;)

sudo snort -c /usr/local/snort/etc/snort/snort.lua -R /usr/local/snort/etc/snort/local.rules -i ens160 -A alert_fast -s 65535 -k none
















